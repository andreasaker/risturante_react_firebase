{"ast":null,"code":"import { courses, categories, loggedIn, setEditCourse, setEditCategory } from \"./reducers\"; //const store = createStore(\n//  reducers,\n//  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//);\n\nimport firebase from 'firebase/app'; //import 'firebase/auth'\n\nimport 'firebase/firestore'; // <- needed if using firestore\n// import 'firebase/functions' // <- needed if using httpsCallable\n\nimport { createStore, combineReducers } from 'redux';\nimport { createFirestoreInstance, firestoreReducer } from 'redux-firestore'; // <- needed if using firestore\n\nconst fbConfig = {\n  apiKey: process.env.FB_API_KEY,\n  authDomain: \"risturante.firebaseapp.com\",\n  databaseURL: \"https://risturante.firebaseio.com\",\n  projectId: \"risturante\",\n  storageBucket: \"risturante.appspot.com\",\n  messagingSenderId: \"371988901337\",\n  appId: process.env.FB_APP_ID\n}; // react-redux-firebase config\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n\n}; // Initialize firebase instance\n\nfirebase.initializeApp(fbConfig); // Initialize other services on firebase instance\n\nfirebase.firestore(); // <- needed if using firestore\n// firebase.functions() // <- needed if using httpsCallable\n// Add firebase to reducers\n\nconst rootReducer = combineReducers({\n  courses,\n  categories,\n  loggedIn,\n  setEditCourse,\n  setEditCategory,\n  firestore: firestoreReducer // <- needed if using firestore\n\n}); // Create store with reducers and initial state\n\nconst initialState = {};\nexport const store = createStore(rootReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport const rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n\n};","map":{"version":3,"sources":["C:/Users/Andreas/Documents/sites/risturante_react_firebase/src/redux/store.js"],"names":["courses","categories","loggedIn","setEditCourse","setEditCategory","firebase","createStore","combineReducers","createFirestoreInstance","firestoreReducer","fbConfig","apiKey","process","env","FB_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FB_APP_ID","rrfConfig","userProfile","useFirestoreForProfile","initializeApp","firestore","rootReducer","initialState","store","window","__REDUX_DEVTOOLS_EXTENSION__","rrfProps","config","dispatch"],"mappings":"AACA,SAAQA,OAAR,EACIC,UADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,eAJJ,QAI0B,YAJ1B,C,CAMA;AACA;AACA;AACA;;AAIA,OAAOC,QAAP,MAAqB,cAArB,C,CACA;;AACA,OAAO,oBAAP,C,CAA4B;AAC5B;;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,iBAA1D,C,CAA4E;;AAE5E,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,UADL;AAEfC,EAAAA,UAAU,EAAE,4BAFG;AAGfC,EAAAA,WAAW,EAAE,mCAHE;AAIfC,EAAAA,SAAS,EAAE,YAJI;AAKfC,EAAAA,aAAa,EAAE,wBALA;AAMfC,EAAAA,iBAAiB,EAAE,cANJ;AAOfC,EAAAA,KAAK,EAAER,OAAO,CAACC,GAAR,CAAYQ;AAPJ,CAAjB,C,CAUA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,OADG;AAEhBC,EAAAA,sBAAsB,EAAE,IAFR,CAEa;;AAFb,CAAlB,C,CAKA;;AACAnB,QAAQ,CAACoB,aAAT,CAAuBf,QAAvB,E,CAEA;;AACAL,QAAQ,CAACqB,SAAT,G,CAAqB;AACrB;AAEA;;AACA,MAAMC,WAAW,GAAGpB,eAAe,CAAC;AAClCP,EAAAA,OADkC;AAElCC,EAAAA,UAFkC;AAGlCC,EAAAA,QAHkC;AAIlCC,EAAAA,aAJkC;AAKlCC,EAAAA,eALkC;AAMlCsB,EAAAA,SAAS,EAAEjB,gBANuB,CAMN;;AANM,CAAD,CAAnC,C,CASA;;AACA,MAAMmB,YAAY,GAAG,EAArB;AACA,OAAO,MAAMC,KAAK,GAAGvB,WAAW,CAACqB,WAAD,EAAcC,YAAd,EAC5BE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EADX,CAAzB;AAGP,OAAO,MAAMC,QAAQ,GAAG;AACtB3B,EAAAA,QADsB;AAEtB4B,EAAAA,MAAM,EAAEX,SAFc;AAGtBY,EAAAA,QAAQ,EAAEL,KAAK,CAACK,QAHM;AAItB1B,EAAAA,uBAJsB,CAIE;;AAJF,CAAjB","sourcesContent":["\r\nimport {courses,\r\n    categories,\r\n    loggedIn,\r\n    setEditCourse,\r\n    setEditCategory} from \"./reducers\";\r\n\r\n//const store = createStore(\r\n//  reducers,\r\n//  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//);\r\n\r\n\r\n\r\nimport firebase from 'firebase/app'\r\n//import 'firebase/auth'\r\nimport 'firebase/firestore' // <- needed if using firestore\r\n// import 'firebase/functions' // <- needed if using httpsCallable\r\nimport { createStore, combineReducers } from 'redux'\r\n\r\nimport { createFirestoreInstance, firestoreReducer } from 'redux-firestore' // <- needed if using firestore\r\n\r\nconst fbConfig = {\r\n  apiKey: process.env.FB_API_KEY,\r\n  authDomain: \"risturante.firebaseapp.com\",\r\n  databaseURL: \"https://risturante.firebaseio.com\",\r\n  projectId: \"risturante\",\r\n  storageBucket: \"risturante.appspot.com\",\r\n  messagingSenderId: \"371988901337\",\r\n  appId: process.env.FB_APP_ID\r\n}\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n}\r\n\r\n// Initialize firebase instance\r\nfirebase.initializeApp(fbConfig)\r\n\r\n// Initialize other services on firebase instance\r\nfirebase.firestore() // <- needed if using firestore\r\n// firebase.functions() // <- needed if using httpsCallable\r\n\r\n// Add firebase to reducers\r\nconst rootReducer = combineReducers({\r\n  courses,\r\n  categories,\r\n  loggedIn,\r\n  setEditCourse,\r\n  setEditCategory,\r\n  firestore: firestoreReducer // <- needed if using firestore\r\n})\r\n\r\n// Create store with reducers and initial state\r\nconst initialState = {}\r\nexport const store = createStore(rootReducer, initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport const rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance // <- needed if using firestore\r\n}\r\n"]},"metadata":{},"sourceType":"module"}