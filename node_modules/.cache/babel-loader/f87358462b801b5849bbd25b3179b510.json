{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\risturante_react_firebase\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { combineReducers } from \"redux\";\n\nconst courses = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_COURSE\":\n      return [...state, _objectSpread({}, action.payload.course, {\n        id: action.payload.id\n      })];\n\n    case \"EDIT_COURSE\":\n      console.log(action.payload.course);\n      const newstate = state.map(s => s.id === action.payload.id ? s.course = action.payload.course : s.course);\n      return newstate;\n\n    default:\n      return state;\n  }\n};\n\nconst setEditCourse = (state = {\n  id: \"\",\n  status: false\n}, action) => {\n  switch (action.type) {\n    case \"SET_EDIT_COURSE\":\n      return {\n        id: action.payload.id,\n        status: action.payload.status\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst categories = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_CATEGORY\":\n      const _action$payload = action.payload,\n            id = _action$payload.id,\n            name = _action$payload.name;\n      return [...state, {\n        name,\n        id\n      }];\n\n    case \"EDIT_CATEGORY\":\n      console.log(action);\n      const newstate = state.map(s => s.id === action.payload.id ? s.name = action.payload.name : s);\n      return newstate;\n\n    default:\n      return state;\n  }\n};\n\nconst setEditCategory = (state = {\n  id: \"\",\n  status: false\n}, action) => {\n  switch (action.type) {\n    case \"SET_EDIT_CATEGORY\":\n      return {\n        id: action.payload.id,\n        status: action.payload.status\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst loggedIn = (state = false, action) => {\n  switch (action.type) {\n    case \"LOGGED_IN\":\n      return !state;\n\n    default:\n      return state;\n  }\n};\n\nconst reducers = combineReducers({\n  courses,\n  categories,\n  loggedIn,\n  setEditCourse,\n  setEditCategory\n});\nexport default reducers;","map":{"version":3,"sources":["C:/Users/Andreas/Documents/sites/risturante_react_firebase/src/redux/reducers.js"],"names":["combineReducers","courses","state","action","type","payload","course","id","console","log","newstate","map","s","setEditCourse","status","categories","name","setEditCategory","loggedIn","reducers"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst courses = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_COURSE\":\r\n      return [...state, { ...action.payload.course, id: action.payload.id }];\r\n    case \"EDIT_COURSE\":\r\n      console.log(action.payload.course);\r\n      const newstate = state.map(s =>\r\n        s.id === action.payload.id\r\n          ? (s.course = action.payload.course)\r\n          : s.course\r\n      );\r\n      return newstate;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setEditCourse = (state = { id: \"\", status: false }, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EDIT_COURSE\":\r\n      return { id: action.payload.id, status: action.payload.status };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst categories = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_CATEGORY\":\r\n      const { id, name } = action.payload;\r\n      return [...state, { name, id }];\r\n    case \"EDIT_CATEGORY\":\r\n      console.log(action);\r\n      const newstate = state.map(s =>\r\n        s.id === action.payload.id ? (s.name = action.payload.name) : s\r\n      );\r\n      return newstate;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setEditCategory = (state = { id: \"\", status: false }, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EDIT_CATEGORY\":\r\n      return { id: action.payload.id, status: action.payload.status };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loggedIn = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"LOGGED_IN\":\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  courses,\r\n  categories,\r\n  loggedIn,\r\n  setEditCourse,\r\n  setEditCategory\r\n});\r\n\r\nexport default reducers;\r\n"]},"metadata":{},"sourceType":"module"}