{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\risturante_react_firebase\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\risturante_react_firebase\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\risturante_react_firebase\\\\src\\\\components\\\\Authentication.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loggedIn } from \"../redux/actions\";\n\nconst Authentication = ({\n  setLoginStatus\n}) => {\n  const loginInit = {\n    username: \"\",\n    password: \"\"\n  };\n\n  const _useState = useState(loginInit),\n        _useState2 = _slicedToArray(_useState, 2),\n        loginInfo = _useState2[0],\n        setLoginInfo = _useState2[1];\n\n  const errorInit = {\n    status: false,\n    msg: \"\"\n  };\n\n  const _useState3 = useState(errorInit),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const USERNAME = process.env.REACT_APP_USERNAME;\n  const PASSWORD = process.env.REACT_APP_PASSWORD;\n\n  const handleChange = e => {\n    e.preventDefault();\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setLoginInfo(_objectSpread({}, loginInfo, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //USERNAME variable not working correct, maybe codebox error, else add: loginInfo.username === USERNAME &&\n\n    if (loginInfo.password === PASSWORD && loginInfo.username === USERNAME) {\n      setLoginStatus(true);\n      setLoginInfo(loginInit);\n    } else {\n      console.log(\"Wrong authentication info\");\n      setError({\n        status: true,\n        msg: \"The Username or Password is incorrect. Try again.\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Log in\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    name: \"username\",\n    value: loginInfo.username,\n    onChange: e => handleChange(e),\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"password\",\n    name: \"password\",\n    value: loginInfo.password,\n    onChange: e => handleChange(e),\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), error.status && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error_msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }\n  }, error.msg), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Login\"));\n};\n\nconst mapDisptachToProps = dispatch => ({\n  setLoginStatus: status => dispatch(loggedIn(status))\n});\n\nexport default connect(null, mapDisptachToProps)(Authentication);","map":{"version":3,"sources":["C:/Users/Andreas/Documents/sites/risturante_react_firebase/src/components/Authentication.js"],"names":["React","useState","connect","loggedIn","Authentication","setLoginStatus","loginInit","username","password","loginInfo","setLoginInfo","errorInit","status","msg","error","setError","USERNAME","process","env","REACT_APP_USERNAME","PASSWORD","REACT_APP_PASSWORD","handleChange","e","preventDefault","target","name","value","handleSubmit","console","log","mapDisptachToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAC7C,QAAMC,SAAS,GAAG;AAAEC,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAAlB;;AAD6C,oBAEXP,QAAQ,CAACK,SAAD,CAFG;AAAA;AAAA,QAEtCG,SAFsC;AAAA,QAE3BC,YAF2B;;AAG7C,QAAMC,SAAS,GAAG;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAAlB;;AAH6C,qBAInBZ,QAAQ,CAACU,SAAD,CAJW;AAAA;AAAA,QAItCG,KAJsC;AAAA,QAI/BC,QAJ+B;;AAK7C,QAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA7B;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACC,GAAR,CAAYG,kBAA7B;;AAEA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AADwB,sBAEAD,CAAC,CAACE,MAFF;AAAA,UAEhBC,IAFgB,aAEhBA,IAFgB;AAAA,UAEVC,KAFU,aAEVA,KAFU;AAGxBjB,IAAAA,YAAY,mBAAMD,SAAN;AAAiB,OAACiB,IAAD,GAAQC;AAAzB,OAAZ;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAGL,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CAGxB;;AACA,QAAIf,SAAS,CAACD,QAAV,KAAuBY,QAAvB,IAAmCX,SAAS,CAACF,QAAV,KAAuBS,QAA9D,EAAwE;AACtEX,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAK,MAAAA,YAAY,CAACJ,SAAD,CAAZ;AACD,KAHD,MAGO;AACLuB,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAf,MAAAA,QAAQ,CAAC;AACPH,QAAAA,MAAM,EAAE,IADD;AAEPC,QAAAA,GAAG,EAAE;AAFE,OAAD,CAAR;AAID;AACF,GAdD;;AAgBA,sBACE;AAAM,IAAA,QAAQ,EAAEU,CAAC,IAAIK,YAAY,CAACL,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEd,SAAS,CAACF,QAJnB;AAKE,IAAA,QAAQ,EAAEgB,CAAC,IAAID,YAAY,CAACC,CAAD,CAL7B;AAME,IAAA,WAAW,EAAC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEd,SAAS,CAACD,QAJnB;AAKE,IAAA,QAAQ,EAAEe,CAAC,IAAID,YAAY,CAACC,CAAD,CAL7B;AAME,IAAA,WAAW,EAAC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAkBGT,KAAK,CAACF,MAAN,iBAAgB;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BE,KAAK,CAACD,GAAlC,CAlBnB,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBF,CADF;AAuBD,CArDD;;AAuDA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACtC3B,EAAAA,cAAc,EAAEO,MAAM,IAAIoB,QAAQ,CAAC7B,QAAQ,CAACS,MAAD,CAAT;AADI,CAAL,CAAnC;;AAIA,eAAeV,OAAO,CAAC,IAAD,EAAO6B,kBAAP,CAAP,CAAkC3B,cAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loggedIn } from \"../redux/actions\";\r\n\r\nconst Authentication = ({ setLoginStatus }) => {\r\n  const loginInit = { username: \"\", password: \"\" };\r\n  const [loginInfo, setLoginInfo] = useState(loginInit);\r\n  const errorInit = { status: false, msg: \"\" };\r\n  const [error, setError] = useState(errorInit);\r\n  const USERNAME = process.env.REACT_APP_USERNAME;\r\n  const PASSWORD = process.env.REACT_APP_PASSWORD;\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setLoginInfo({ ...loginInfo, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    //USERNAME variable not working correct, maybe codebox error, else add: loginInfo.username === USERNAME &&\r\n    if (loginInfo.password === PASSWORD && loginInfo.username === USERNAME) {\r\n      setLoginStatus(true);\r\n      setLoginInfo(loginInit);\r\n    } else {\r\n      console.log(\"Wrong authentication info\");\r\n      setError({\r\n        status: true,\r\n        msg: \"The Username or Password is incorrect. Try again.\"\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e)}>\r\n      <div className=\"title\">Log in</div>\r\n      <input\r\n        required\r\n        type=\"text\"\r\n        name=\"username\"\r\n        value={loginInfo.username}\r\n        onChange={e => handleChange(e)}\r\n        placeholder=\"Username\"\r\n      />\r\n      <input\r\n        required\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={loginInfo.password}\r\n        onChange={e => handleChange(e)}\r\n        placeholder=\"Password\"\r\n      />\r\n      {error.status && <div className=\"error_msg\">{error.msg}</div>}\r\n      <button>Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDisptachToProps = dispatch => ({\r\n  setLoginStatus: status => dispatch(loggedIn(status))\r\n});\r\n\r\nexport default connect(null, mapDisptachToProps)(Authentication);\r\n"]},"metadata":{},"sourceType":"module"}