{"ast":null,"code":"import { courses, categories, loggedIn, setEditCourse, setEditCategory } from \"./reducers\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { createFirestoreInstance, firestoreReducer } from 'redux-firestore';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nconst fbConfig = {\n  apiKey: process.env.FB_API_KEY,\n  authDomain: \"risturante.firebaseapp.com\",\n  databaseURL: \"https://risturante.firebaseio.com\",\n  projectId: \"risturante\",\n  storageBucket: \"risturante.appspot.com\",\n  messagingSenderId: \"371988901337\",\n  appId: process.env.FB_APP_ID\n}; // react-redux-firebase config\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n\n};\nfirebase.initializeApp(fbConfig);\nfirebase.firestore();\nconst rootReducer = combineReducers({\n  courses,\n  categories,\n  loggedIn,\n  setEditCourse,\n  setEditCategory,\n  firestore: firestoreReducer // <- needed if using firestore\n\n});\nconst middleware = compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(fbConfig), reactReduxFirebase(fbConfig), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nconst initialState = {};\nexport const store = createStore(rootReducer, initialState, middleware);\nexport const rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};","map":{"version":3,"sources":["C:/Users/Andreas/Documents/sites/risturante_react_firebase/src/redux/store.js"],"names":["courses","categories","loggedIn","setEditCourse","setEditCategory","firebase","createStore","combineReducers","applyMiddleware","compose","createFirestoreInstance","firestoreReducer","thunk","reduxFirestore","getFirestore","reactReduxFirebase","getFirebase","fbConfig","apiKey","process","env","FB_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FB_APP_ID","rrfConfig","userProfile","useFirestoreForProfile","initializeApp","firestore","rootReducer","middleware","withExtraArgument","window","__REDUX_DEVTOOLS_EXTENSION__","initialState","store","rrfProps","config","dispatch"],"mappings":"AACA,SAAQA,OAAR,EACIC,UADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,eAJJ,QAI0B,YAJ1B;AAMA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,iBAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,sBAAhD;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,UADL;AAEfC,EAAAA,UAAU,EAAE,4BAFG;AAGfC,EAAAA,WAAW,EAAE,mCAHE;AAIfC,EAAAA,SAAS,EAAE,YAJI;AAKfC,EAAAA,aAAa,EAAE,wBALA;AAMfC,EAAAA,iBAAiB,EAAE,cANJ;AAOfC,EAAAA,KAAK,EAAER,OAAO,CAACC,GAAR,CAAYQ;AAPJ,CAAjB,C,CAUA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,OADG;AAEhBC,EAAAA,sBAAsB,EAAE,IAFR,CAEa;;AAFb,CAAlB;AAKA1B,QAAQ,CAAC2B,aAAT,CAAuBf,QAAvB;AACAZ,QAAQ,CAAC4B,SAAT;AAEA,MAAMC,WAAW,GAAG3B,eAAe,CAAC;AAClCP,EAAAA,OADkC;AAElCC,EAAAA,UAFkC;AAGlCC,EAAAA,QAHkC;AAIlCC,EAAAA,aAJkC;AAKlCC,EAAAA,eALkC;AAMlC6B,EAAAA,SAAS,EAAEtB,gBANuB,CAMN;;AANM,CAAD,CAAnC;AASA,MAAMwB,UAAU,GAAG1B,OAAO,CACxBD,eAAe,CAACI,KAAK,CAACwB,iBAAN,CAAwB;AAACpB,EAAAA,WAAD;AAAcF,EAAAA;AAAd,CAAxB,CAAD,CADS,EAExBD,cAAc,CAACI,QAAD,CAFU,EAGxBF,kBAAkB,CAACE,QAAD,CAHM,EAIxBoB,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAJf,CAA1B;AAOA,MAAMC,YAAY,GAAG,EAArB;AACA,OAAO,MAAMC,KAAK,GAAGlC,WAAW,CAAC4B,WAAD,EAAcK,YAAd,EAA4BJ,UAA5B,CAAzB;AAEP,OAAO,MAAMM,QAAQ,GAAG;AACtBpC,EAAAA,QADsB;AAEtBqC,EAAAA,MAAM,EAAEb,SAFc;AAGtBc,EAAAA,QAAQ,EAAEH,KAAK,CAACG,QAHM;AAItBjC,EAAAA;AAJsB,CAAjB","sourcesContent":["\r\nimport {courses,\r\n    categories,\r\n    loggedIn,\r\n    setEditCourse,\r\n    setEditCategory} from \"./reducers\";\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore' \r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport { createFirestoreInstance, firestoreReducer } from 'redux-firestore' \r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\n\r\nconst fbConfig = {\r\n  apiKey: process.env.FB_API_KEY,\r\n  authDomain: \"risturante.firebaseapp.com\",\r\n  databaseURL: \"https://risturante.firebaseio.com\",\r\n  projectId: \"risturante\",\r\n  storageBucket: \"risturante.appspot.com\",\r\n  messagingSenderId: \"371988901337\",\r\n  appId: process.env.FB_APP_ID\r\n}\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n}\r\n\r\nfirebase.initializeApp(fbConfig)\r\nfirebase.firestore()\r\n\r\nconst rootReducer = combineReducers({\r\n  courses,\r\n  categories,\r\n  loggedIn,\r\n  setEditCourse,\r\n  setEditCategory,\r\n  firestore: firestoreReducer // <- needed if using firestore\r\n})\r\n\r\nconst middleware = compose(\r\n  applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n  reduxFirestore(fbConfig),\r\n  reactReduxFirebase(fbConfig),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nconst initialState = {}\r\nexport const store = createStore(rootReducer, initialState, middleware)\r\n\r\nexport const rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance \r\n}\r\n"]},"metadata":{},"sourceType":"module"}