{"ast":null,"code":"export const courses = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_COURSE\":\n      console.log(\"Course added with name: \".concat(action.title));\n      return state;\n\n    case \"EDIT_COURSE\":\n      console.log(action.payload.course);\n      const newstate = state.map(s => s.id === action.payload.id ? s.course = action.payload.course : s.course);\n      return newstate;\n\n    default:\n      return state;\n  }\n};\nexport const setEditCourse = (state = {\n  id: \"\",\n  status: false\n}, action) => {\n  switch (action.type) {\n    case \"SET_EDIT_COURSE\":\n      return {\n        id: action.payload.id,\n        status: action.payload.status\n      };\n\n    default:\n      return state;\n  }\n};\nexport const categories = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_CATEGORY\":\n      console.log(\"Category added with name: \".concat(action.name));\n      return state;\n\n    case \"EDIT_CATEGORY\":\n      console.log(\"Category edited with id: \".concat(action.id, \" \"));\n      return state;\n\n    case \"REMOVE_CATEGORY\":\n      console.log(\"Category removed with id: \".concat(action.id, \" \"));\n      return state;\n\n    default:\n      return state;\n  }\n};\nexport const setEditCategory = (state = {\n  id: \"\",\n  status: false\n}, action) => {\n  switch (action.type) {\n    case \"SET_EDIT_CATEGORY\":\n      return {\n        id: action.payload.id,\n        status: action.payload.status\n      };\n\n    default:\n      return state;\n  }\n};\nexport const loggedIn = (state = false, action) => {\n  switch (action.type) {\n    case \"LOGGED_IN\":\n      return !state;\n\n    default:\n      return state;\n  }\n};\n/*const reducers = combineReducers({\r\n  courses,\r\n  categories,\r\n  loggedIn,\r\n  setEditCourse,\r\n  setEditCategory\r\n});\r\n\r\nexport default reducers;\r\n*/","map":{"version":3,"sources":["C:/Users/Andreas/Documents/sites/risturante_react_firebase/src/redux/reducers.js"],"names":["courses","state","action","type","console","log","title","payload","course","newstate","map","s","id","setEditCourse","status","categories","name","setEditCategory","loggedIn"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,mCAAuCH,MAAM,CAACI,KAA9C;AACA,aAAOL,KAAP;;AACF,SAAK,aAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACK,OAAP,CAAeC,MAA3B;AACA,YAAMC,QAAQ,GAAGR,KAAK,CAACS,GAAN,CAAUC,CAAC,IAC1BA,CAAC,CAACC,EAAF,KAASV,MAAM,CAACK,OAAP,CAAeK,EAAxB,GACKD,CAAC,CAACH,MAAF,GAAWN,MAAM,CAACK,OAAP,CAAeC,MAD/B,GAEIG,CAAC,CAACH,MAHS,CAAjB;AAKA,aAAOC,QAAP;;AACF;AACE,aAAOR,KAAP;AAbJ;AAeD,CAhBM;AAkBP,OAAO,MAAMY,aAAa,GAAG,CAACZ,KAAK,GAAG;AAAEW,EAAAA,EAAE,EAAE,EAAN;AAAUE,EAAAA,MAAM,EAAE;AAAlB,CAAT,EAAoCZ,MAApC,KAA+C;AAC1E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAO;AAAES,QAAAA,EAAE,EAAEV,MAAM,CAACK,OAAP,CAAeK,EAArB;AAAyBE,QAAAA,MAAM,EAAEZ,MAAM,CAACK,OAAP,CAAeO;AAAhD,OAAP;;AACF;AACE,aAAOb,KAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMc,UAAU,GAAG,CAACd,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,qCAAyCH,MAAM,CAACc,IAAhD;AACA,aAAOf,KAAP;;AACF,SAAK,eAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,oCAAwCH,MAAM,CAACU,EAA/C;AACA,aAAOX,KAAP;;AACF,SAAK,iBAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,qCAAyCH,MAAM,CAACU,EAAhD;AACA,aAAOX,KAAP;;AACF;AACE,aAAOA,KAAP;AAXJ;AAaD,CAdM;AAgBP,OAAO,MAAMgB,eAAe,GAAG,CAAChB,KAAK,GAAG;AAAEW,EAAAA,EAAE,EAAE,EAAN;AAAUE,EAAAA,MAAM,EAAE;AAAlB,CAAT,EAAoCZ,MAApC,KAA+C;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO;AAAES,QAAAA,EAAE,EAAEV,MAAM,CAACK,OAAP,CAAeK,EAArB;AAAyBE,QAAAA,MAAM,EAAEZ,MAAM,CAACK,OAAP,CAAeO;AAAhD,OAAP;;AACF;AACE,aAAOb,KAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMiB,QAAQ,GAAG,CAACjB,KAAK,GAAG,KAAT,EAAgBC,MAAhB,KAA2B;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO,CAACF,KAAR;;AACF;AACE,aAAOA,KAAP;AAJJ;AAMD,CAPM;AASP","sourcesContent":["export const courses = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_COURSE\":\r\n      console.log(`Course added with name: ${action.title}`);\r\n      return state;\r\n    case \"EDIT_COURSE\":\r\n      console.log(action.payload.course);\r\n      const newstate = state.map(s =>\r\n        s.id === action.payload.id\r\n          ? (s.course = action.payload.course)\r\n          : s.course\r\n      );\r\n      return newstate;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setEditCourse = (state = { id: \"\", status: false }, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EDIT_COURSE\":\r\n      return { id: action.payload.id, status: action.payload.status };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const categories = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_CATEGORY\":\r\n      console.log(`Category added with name: ${action.name}`);\r\n      return state;\r\n    case \"EDIT_CATEGORY\":\r\n      console.log(`Category edited with id: ${action.id} `);\r\n      return state;\r\n    case \"REMOVE_CATEGORY\":\r\n      console.log(`Category removed with id: ${action.id} `);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setEditCategory = (state = { id: \"\", status: false }, action) => {\r\n  switch (action.type) {\r\n    case \"SET_EDIT_CATEGORY\":\r\n      return { id: action.payload.id, status: action.payload.status };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const loggedIn = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"LOGGED_IN\":\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/*const reducers = combineReducers({\r\n  courses,\r\n  categories,\r\n  loggedIn,\r\n  setEditCourse,\r\n  setEditCategory\r\n});\r\n\r\nexport default reducers;\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}